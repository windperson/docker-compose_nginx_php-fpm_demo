version: '2'

services:
  varnish:
    labels:
      - "localhost.phpdemo.prod=true"
      - "localhost.phpdemo.kind=runtime"
    extends:
      file: docker-compose.base.deploy.yml
      service: varnish-base
    env_file:
      - ./conf/varnish-cache/env/web.env
    volumes_from:
      - varnish-conf
    links:
      - default_site:normal_site
    ports:
      - "80:80"
    networks:
      - back_end
    restart: always

  varnish-conf:
    labels:
      - "localhost.phpdemo.prod=true"
      - "localhost.phpdemo.kind=config"
    image: ${private_docker_registry}phpdemo/varnish-conf-prod${release_tag}
    # build:
    #   context: ./conf/varnish-cache
    #   dockerfile: Dockerfile.conf
    network_mode: "none"
    restart: on-failure:1

  # nginx container
  default_site:
    labels:
      - "localhost.phpdemo.prod=true"
      - "localhost.phpdemo.kind=runtime"
    extends:
      file: docker-compose.base.deploy.yml
      service: nginx-base
    #volumes:
    #  - ./conf/nginx/config:/etc/nginx
    links:
      - phpfpm
    volumes_from:
      - phpfpm
      - default_site-conf
    networks:
      - back_end
    restart: always

  default_site-conf:
    labels:
      - "localhost.phpdemo.prod=true"
      - "localhost.phpdemo.kind=config"
    image: ${private_docker_registry}phpdemo/default_site-conf-prod${release_tag}
    # build:
    #   context: ./conf/nginx
    #   dockerfile: Dockerfile.conf
    network_mode: "none"
    restart: on-failure:1

  # phpfpm container
  phpfpm:
    labels:
      - "localhost.phpdemo.prod=true"
      - "localhost.phpdemo.kind=runtime"
    extends:
      file: docker-compose.base.deploy.yml
      service: phpfpm-base
    #volumes:
    #  - ./conf/phpfpm/config:/usr/local/etc
    #  - ./src:/var/www/html
    volumes_from:
      - phpfpm-conf:ro
      - phpfpm-src:ro
      - phpfpm-data:ro
    links:
      - redis0cache
    networks:
      - back_end
    restart: always

  phpfpm-conf:
    labels:
      - "localhost.phpdemo.prod=true"
      - "localhost.phpdemo.kind=config"
    image: ${private_docker_registry}phpdemo/phpfpm-conf-prod${release_tag}
    # build:
    #   context: ./conf/phpfpm
    #   dockerfile: Dockerfile.conf
    network_mode: "none"
    restart: on-failure:1

  phpfpm-src:
    labels:
      - "localhost.phpdemo.prod=true"
      - "localhost.phpdemo.kind=program"
    image: ${private_docker_registry}phpdemo/phpfpm-src-prod${release_tag}
    # build:
    #   context: ./src
    network_mode: "none"
    restart: on-failure:1

  phpfpm-data:
    labels:
      - "localhost.phpdemo.prod=true"
      - "localhost.phpdemo.kind=data"
    image: ${private_docker_registry}phpdemo/phpfpm-data-prod${release_tag}
    # build:
    #   context: ./src/php/data
    network_mode: "none"
    restart: on-failure:1


  #cache container
  redis0cache:
    labels:
      - "localhost.phpdemo.prod=true"
      - "localhost.phpdemo.kind=runtime"
    extends:
      file: docker-compose.base.deploy.yml
      service: redis-base
    volumes:
    #  - ./conf/redis/config:/usr/local/etc/redis
    #  - ./data/redis:/data
       - redis_data:/data
    volumes_from:
      - redis-conf:ro
    ports:
      - "6379:6379"
    networks:
      - back_end
    restart: always

  redis-conf:
    labels:
      - "localhost.phpdemo.prod=true"
      - "localhost.phpdemo.kind=config"
    image: ${private_docker_registry}phpdemo/redis-conf-prod${release_tag}
    # build:
    #   context: ./conf/redis
    #   dockerfile: Dockerfile.conf
    network_mode: "none"
    restart: on-failure:1

  redis-data:
    labels:
      - "localhost.phpdemo.prod=true"
      - "localhost.phpdemo.kind=data"
    image: ${private_docker_registry}phpdemo/redis-data-prod${release_tag}
    # build:
    #   context: ./data
    volumes:
      - redis_data:/data
    network_mode: "none"
    restart: on-failure:1

networks:
  back_end:

volumes:
  redis_data:
    driver: local
